import numpy as np
import mlxtend
import warnings
from mlxtend.classifier import StackingClassifier
from sklearn import datasets
from sklearn import model_selection
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
warnings.filterwarnings("ignore")
iris = datasets.load_iris()
x,y = iris.data[:,1:3], iris.target
clf1 = KNeighborsClassifier()
clf2 = RandomForestClassifier()
clf3 = GaussianNB()
lr = LogisticRegression()
sclf = StackingClassifier(classifiers = [clf1,clf2,clf3],
                               use_probas = True,
                               meta_classifier = lr)
print("3 fold cross validation")
for clf,lable in zip([clf1,clf2,clf3,sclf],
                     ["KNN",
                     "randomforrest",
                     "NB",
                     "Stacking"]):
  scores = model_selection.cross_val_score(clf,x,y, cv= 5, scoring= "f1_macro")

  print("F1 Scores: %0.2f  [%s]"
        %(scores.mean(),lable))
